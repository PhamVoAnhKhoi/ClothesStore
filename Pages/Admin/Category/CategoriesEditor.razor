@page "/admin/categories/edit/{id:long}" 
@page "/admin/categories/create"
@inherits OwningComponentBase<ICategoryRepository>

<style>
    div.validation-message {
        color: rgb(220, 53, 69);
        font-weight: 500
    }
</style>
<h3 class="bg-@ThemeColor text-white text-center p-1">@TitleText a Product</h3>
<EditForm Model="Category" OnValidSubmit="SaveCategory">
    <DataAnnotationsValidator />
    @if (Category.CategoryID != 0)
    {
        <div class="form-group">
            <label>ID</label>
            <input class="form-control" disabled value="@Category.CategoryID" />
        </div>
    }

    <div class="form-group"> 
        <label>Name</label>
        <ValidationMessage For="@(() => Category.CategoryName)" />
        <InputText class="form-control" @bind-Value="Category.CategoryName" />
    </div>
    <div class="form-group"> 
        <label>Description</label>
        <ValidationMessage For="@(() => Category.CategoryDescription)" />
        <InputText class="form-control" @bind-Value="Category.CategoryDescription" />
    </div>
    <div class="form-group"> 
        <label>Image</label>
        <ValidationMessage For="@(() => Category.CategoryImage)" />
        <InputText class="form-control" @bind-Value="Category.CategoryImage" />
    </div>
    <div class="mt-2"> <button type="submit" class="btn btn-@ThemeColor">Save</button>
        <NavLink class="btn btn-secondary" href="/admin/categories">Cancel</NavLink>
    </div>
</EditForm> 
@code {
    public ICategoryRepository Repository => Service; 
    [Inject]
    public NavigationManager? NavManager{get;set;}
    [Parameter] 
    public long Id { get; set; } = 0; 
    public Category Category { get; set; } = new Category(); 
    protected override void OnParametersSet()
    {
        if (Id != 0)
        {
            Category = Repository.Categories.FirstOrDefault(cate => cate.CategoryID == Id) ?? new();
        }
    }
    public void SaveCategory()
    {
        if (Id == 0)
        { 
            Repository.CreateCategory(Category); 
        }
        else 
        { 
            Repository.SaveCategory(Category); 
        }
        NavManager?.NavigateTo("/admin/categories");
    }
    public string ThemeColor => Id == 0 ? "primary" : "warning"; 
    public string TitleText => Id == 0 ? "Create" : "Edit";
}