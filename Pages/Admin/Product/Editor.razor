@page "/admin/products/edit/{id:long}"
@page "/admin/products/create"
@inherits OwningComponentBase<IStoreRepository>
<style>
    div.validation-message {
        color: rgb(220, 53, 69);
        font-weight: 500;
    }
    <style>
     .scrollable-dropdown {
        max-height: 200px; /* Điều chỉnh chiều cao tối đa của dropdown */
        overflow-y: auto; /* Cho phép cuộn nếu nội dung vượt quá chiều cao */
    }
</style>

</style>
<h3 class="bg-@ThemeColor text-white text-center p-1">@TitleText a Product</h3>
<EditForm Model="Product" OnValidSubmit="SaveProduct">
    <DataAnnotationsValidator />
    @if (Product.ProductID != 0)
    {
        <div class="form-group">
            <label>ID</label>
            <input class="form-control" disabled value="@Product.ProductID" />
        </div>
    }

    <div class="form-group">
        <label>Name</label>
        <ValidationMessage For="@(() => Product.Name)" />
        <InputText class="form-control" @bind-Value="Product.Name" />
    </div>
    <div class="form-group">
        <label>Description</label>
        <ValidationMessage For="@(() => Product.Description)" />
        <InputText class="form-control" @bind-Value="Product.Description" />
    </div>
    <div class="form-group">
        <label>Category</label>
        <ValidationMessage For="@(() => Product.CategoryName)" />
        <select class="form-control scrollable-dropdown" @bind="@Product.CategoryID">
            <option value="">Select a Category...</option>
            @foreach (var category in Repository.Categories)
            {
                <option value="@category.CategoryID">@category.CategoryName</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label>Price</label>
        <ValidationMessage For="@(() => Product.Price)" />
        <InputNumber class="form-control" @bind-Value="Product.Price" />
    </div>
    <div class="form-group">
        <label>Quantity</label>
        <ValidationMessage For="@(() => Product.QuantityOfProduct)" />
        <InputNumber class="form-control" @bind-Value="Product.QuantityOfProduct"/>
    </div>

    <div class="form-group">
        <label>Product image</label>
        <ValidationMessage For="@(() => Product.ProductImage)" />
        <InputText class="form-control" @bind-Value="Product.ProductImage" />
    </div>
    <div class="mt-2">
        <button type="submit" class="btn btn-@ThemeColor">Save</button>
        <NavLink class="btn btn-secondary" href="/admin/products">Cancel</NavLink>
    </div>
</EditForm>
@code {
    public IStoreRepository Repository => Service;
    [Inject]
    public NavigationManager? NavManager { get; set; }
    [Parameter]
    public long Id { get; set; } = 0;
    public Product Product { get; set; } = new Product();

    public void SaveProduct()
    {
        if (Id == 0)
        {
            Repository.CreateProduct(Product);
        }
        else
        {
            Repository.SaveProduct(Product);
        }
        NavManager?.NavigateTo("/admin/products");
    }

    protected override void OnParametersSet()
    {
        if (Id != 0)
        {
            Product = Repository.Products.FirstOrDefault(p => p.ProductID == Id) ?? new();
        }
    }

    public string ThemeColor => Id == 0 ? "primary" : "warning";
    public string TitleText => Id == 0 ? "Create" : "Edit";
}
